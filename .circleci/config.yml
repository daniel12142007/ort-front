version: 2.1

parameters:
    docker-container:
        type: string
        default: 'ort-frontend'
        description: 'Docker container name for DentApp Prod'

jobs:
    deploy-to-production:
        docker:
            - image: circleci/node:14
            - image: docker:20.10.9
        steps:
            - checkout
            - setup_remote_docker
            - run:
                  name: Build Docker Image
                  command: |
                      pwd;
                      if [ ! -f Dockerfile ]; then
                      echo "Dockerfile not found"
                      exit 1
                      fi
                      docker build -t << pipeline.parameters.docker-container >>:latest .
            - run:
                  name: Compress Docker Image
                  command: |
                      docker save << pipeline.parameters.docker-container >>:latest | gzip > << pipeline.parameters.docker-container >>.tar.gz
            - run:
                  name: Update Docker-compose.yml
                  command: |
                      sed -i 's@#image@<< pipeline.parameters.docker-container >>:latest@g' docker-compose-prod.yml
            - run: ls -lh
            - persist_to_workspace:
                  root: .
                  paths:
                      - << pipeline.parameters.docker-container >>.tar.gz
                      - docker-compose-prod.yml
    transfer-and-run-prod:
        docker:
            - image: circleci/node:14
        steps:
            - attach_workspace:
                  at: .
            - run:
                  name: Install SSH And Configure
                  command: |
                      echo $SSH_PRIVATE_KEY | base64 --decode > ./privateKey.pem
                      chmod 400 privateKey.pem
            - run:
                  name: Stop Remote Docker-Compose
                  command: |
                      ssh -o "StrictHostKeyChecking=no" -i ./privateKey.pem ubuntu@$PROD_HOST '
                          if [ -f docker-compose-prod.yml ]; then
                              sudo docker-compose down --rmi all
                              sudo rm docker-compose-prod.yml
                          else
                      echo "docker-compose-prod.yml not found"
                      fi
                      '
            - run:
                  name: Transfer Files
                  command: |
                      scp -o "StrictHostKeyChecking=no" -i ./privateKey.pem ./<< pipeline.parameters.docker-container >>.tar.gz ./docker-compose-prod.yml ubuntu@$PROD_HOST:~/
            - run:
                  name: Decompress Docker Image | Run Compose
                  command: |
                      ssh -o "StrictHostKeyChecking=no" -i ./privateKey.pem ubuntu@$PROD_HOST '
                          sudo gunzip -c ./<< pipeline.parameters.docker-container >>.tar.gz | sudo docker load
                          sudo rm ./<< pipeline.parameters.docker-container >>.tar.gz
                          sudo docker-compose -f docker-compose-prod.yml up -d
                      '

workflows:
    deploy-to-prod:
        jobs:
            - deploy-to-production:
                  filters:
                      branches:
                          only:
                              - development
            - transfer-and-run-prod:
                  requires:
                      - deploy-to-production
                  filters:
                      branches:
                          only:
                              - development